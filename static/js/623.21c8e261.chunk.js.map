{"version":3,"file":"static/js/623.21c8e261.chunk.js","mappings":"+IAEA,MAmCA,EAnCwBA,KAEhBC,EAAAA,EAAAA,KAAA,OAAAC,UACIC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,UAASF,SAAA,EACnBD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,YAAWF,SAAC,WAC1BC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,aAAYF,SAAA,EACtBD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,wBACJC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,yQACoDD,EAAAA,EAAAA,KAAA,UACnDE,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACID,EAAAA,EAAAA,KAAA,MAAAC,UAAID,EAAAA,EAAAA,KAAA,MAAAC,SAAI,yDACRD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mKACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,8FAIRD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,uCACJC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,iMACwCD,EAAAA,EAAAA,KAAA,SAAM,qNACDA,EAAAA,EAAAA,KAAA,SAAM,uIACTA,EAAAA,EAAAA,KAAA,SAAM,iLACCA,EAAAA,EAAAA,KAAA,aAEpDE,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,mCACOD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,oBAAoB,MAAED,EAAAA,EAAAA,KAAA,SAAM,8KACHA,EAAAA,EAAAA,KAAA,SAAM,gQACqBA,EAAAA,EAAAA,KAAA,SAAM,8RACNA,EAAAA,EAAAA,KAAA,mB","sources":["til/Day23.tsx"],"sourcesContent":["import React from \"react\";\n\nconst Day23: React.FC = () => {\n    return (\n        <div>\n            <dl className=\"dayWrap\">\n                <dt className=\"daybutton\">day23</dt>\n                <dd className=\"daycontent\">\n                    <h3>solidity abi day45</h3>\n                    <p>\n                        컨트랙트 호출이란 배포된 컨트랙트의 함수를 호출하는것으로 상태변경이나 데이터조회가 가능하다 <br />\n                        <ul>\n                            <li><h3>컨트랙트 호출방식</h3></li>\n                            <li>트랜잭션 호출: 상태변경이 발생하는 함수호출 가스비용 소모</li>\n                            <li>조회(call): 읽기전용 가스소모 없음</li>\n                        </ul>\n                    </p>\n                        \n                        <h3>abi(application binary interface)</h3>\n                        <p>\n                            컨트랙트에서 호출할수 있는 함수 및 데이터 구조를 정의하는 인터페이스 <br />\n                            컨트랙트 배포시 자동으로 생성되고, 컨트랙트 주소와 함수 시그니처를 포함한다. <br />\n                            abi encoding: 함수호출시 데이터를 바이트화 하여 EVM에 전달 <br />\n                            abi decoding: 컨트랙트의 응답값(바이트)을 사람이 읽을수 있는 형태로 변환 <br />\n                        </p>\n                        <p>\n                            중요한구문:<h4>await tx.wait()</h4>  <br />\n                            트랜잭션이 블록체인에 완전히 저장될 때까지 기다리는 구문이다. <br />\n                            이 구문을 사용하면 트랜잭션이 완료될 때까지 대기하고, 성공처리 되었는지 확인하고, tx receipt를 반환 <br />\n                            tx의 실패여부를 확인해야되고,가스비 사용량등 tx의 상세정보를 확인하며,tx완료전에 확인하면 잘못된 결과발생 <br /> \n                        </p>\n                </dd>\n            </dl>\n        </div>\n    );\n};\n\nexport default Day23;"],"names":["Day23","_jsx","children","_jsxs","className"],"sourceRoot":""}