{"version":3,"file":"static/js/9919.f1860596.chunk.js","mappings":"qKAEA,MA0DA,EA1DWA,KAEHC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,UAASC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,kBAC1BF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,aAAYC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qCACJF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2JACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oLACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mJAERC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+kBAKHC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sCACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,yWAGHC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8QAEHF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8DACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6KACJF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,gIACAF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sFACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4IACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6FACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iKACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iLAGZC,EAAAA,EAAAA,KAAA,MAAAD,UACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+KACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2JACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mGACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4QAIhBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,ybAIHC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iDACJF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oFACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gJACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yKACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uQ","sources":["til/Day3.tsx"],"sourcesContent":["import React,{JSX} from \"react\";\nimport \"../css/dayform.css\"\nconst Day3=():JSX.Element=>{\n    return(\n        <dl className=\"dayWrap\">\n        <dt className=\"daybutton\">25.2.5 day 3</dt>\n        <dd className=\"daycontent\">\n            <h4>블록의 구조</h4>\n            <ul>\n                <li>블록해시:블록헤더의 정보들을 종합적으로 해시한 결과물</li>\n                <li>헤더:이전블록해시,버전,난이도,머클루트,time,nonce 등의 정보를 포함한다</li>\n                <li>바디:송금기록,요청,검증을 위해 사용되는 트랜잭션들</li>\n            </ul>\n            <p>\n                머클루트는 머클트리에서 비롯되는데 머클트리의 동작은 블록바디의 트랜잭션들을 짝지어서 해쉬한 결과를 다시 상위에서 짝지어서\n                해쉬, 최종적으로 머클루트가 된다\n                머클루트는 블록채인 네트워크내의 PoW 작업증명 역할을 수행\n            </p>\n            <h5>UTXO(Unspend Transaction Output)</h5>\n            <p>대표적으로 비트코인의 겨래시스템으로 미사용 상태가 실제 자산, 사라진 상태는 사용됨 \n                개인 키 내부 utxo가 미사용된 코인의 나열 = 실재 자산\n            </p>\n            <p>블록바디의 트랜잭션 구조 송금기록,요청,검증을 위해 사용되는 데이터구조\n                크게 입력과 출력으로 구성</p>\n            <dl>\n                <dt>하나의 트랜잭션 구조</dt>\n                <dd>버전:트랜잭션 형식을 정의하는 숫자필드,현재는 비트코인 ver2 or 1(4byte)</dd>\n                <dd>입력:UTXO이전의 transaction출력을 참조(송신자 서명 포함)\n                    <ul>\n                        <li>transaction hash:이전 트랜잭션의 해시 값</li>\n                        <li>출력인덱스:참조하는 tx에서 어떤 출력(index) 사용하는지</li>\n                        <li>스크립트 길이:잠금해제 스크립트</li>\n                        <li>스크립트 서명:이전 tx출력 소유권 증명목적 구성[서명,공개키]</li>\n                        <li>시퀸스번호:트랜잭션 취소나 변경 가능성 기입할 필드(잘 안쓴다)</li>\n                    </ul>\n                </dd>\n                <dd>\n                    <ul>\n                        <li>출력:다음 수신자에게 전달될 정보. 한 tx는 여러 출력을 보낼수 있다</li>\n                        <li>금액(value):해당출력에포함된 비트코인 가격 단위 (1bc = 1m 사토시)</li>\n                        <li>스크립트길이:잠금 스크립트의 길이</li>\n                        <li>잠금스크립트:비트코인잠금(수신자주소설정)하는 스크립트,일반적으로 p2pkh스크립트형식 pay to pay public key hash</li>\n                    </ul>\n                </dd>\n            </dl>\n            <p>\n                잠금스크립트,해재스크립트: 잠금-출력에서 사용 / 해제-입력에서 사용 \n                트랜잭션카운터:트랜잭션이 포함된 입출력 기록,별도저장 네트워크가 트랜잭션 크기를 빠르게 파악\n            </p>\n            <h4>트랜잭션의 흐름</h4>\n            <ol>\n                <li>송신자는 입력에서 이전utxo참조</li>\n                <li>해당 입력에 개인키로 디지털 서명후 스크립트에 포함</li>\n                <li>송신자는 수신자 주소를 출력에 지정,잠금스크립트(공개키)생성</li>\n                <li>수신자는 해제를 위해 공개키, 서명 재공/ 네트워크 노드는 입출력 검증 시행 (트랜잭션이 올바른지)</li>\n            </ol>\n        </dd>\n    </dl>\n    )\n}\nexport default Day3;\n"],"names":["Day3","_jsxs","className","children","_jsx"],"sourceRoot":""}