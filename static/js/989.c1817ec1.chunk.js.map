{"version":3,"file":"static/js/989.c1817ec1.chunk.js","mappings":"+IAEA,MA+DA,EA/DcA,KAEVC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,UAASC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,oCAC1BF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,aAAYC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6BACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gNAEHC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0CACJF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yCAAmD,QAGzDC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,4EAEHC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,yMACHF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6GACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wGACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+GACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mDACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oDACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yKAGNC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,6CACJF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0FACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2CAAmC,KACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oGACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0GAGNF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,4FACiBC,EAAAA,EAAAA,KAAA,SAAM,4FACkCA,EAAAA,EAAAA,KAAA,SAAM,sGAIlEA,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8DACJF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,iDACwBC,EAAAA,EAAAA,KAAA,SAAM,uDACQA,EAAAA,EAAAA,KAAA,SAAM,4QAK/CA,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,gOAC4CC,EAAAA,EAAAA,KAAA,SAAM,sN","sources":["til/Day10.tsx"],"sourcesContent":["import React from 'react';\n\nconst Day10 = () => {\n  return (\n    <dl className=\"dayWrap\">\n      <dt className=\"daybutton\">25.2.14 day 10[js기초]</dt>\n      <dd className=\"daycontent\">\n        <h3>javascript 타입</h3>\n        <p>타입에 종류와 기능을 알아야 오류를 방지하고 효율적 코드 작성이 가능합니다.</p>\n\n        <h4>primitive(원시) 타입</h4>\n        <ul>\n          <li>number</li>\n          <li>string</li>\n          <li>boolean</li>\n          <li>undefined</li>\n          <li>null</li>\n          <li>symbol ex] const key = Symbol(&quot;key&quot;)</li> {/* &quot;로 큰따옴표 처리 */}\n        </ul>\n\n        <p>타입 확인하는 법: console.log(typeof data)</p>\n\n        <h4>number 타입</h4>\n        <p>일반적인 사칙연산 가능, 복잡한 계산을 위해서는 Math 내장 객체를 사용합니다.</p>\n        <ul>\n          <li>Math.floor(): 괄호 안의 수를 내림 처리하여 반환</li>\n          <li>.ceil(): 괄호 안의 수를 올림 처리하여 반환</li>\n          <li>.round(): 괄호 안의 수를 반올림 처리하여 반환</li>\n          <li>.abs(): 절대값을 반환</li>\n          <li>.sqrt(): 루트값을 반환</li>\n          <li>.pow( , ): 첫 번째 수를 밑으로, 두 번째 수를 지수로 계산한 값을 반환</li>\n        </ul>\n\n        <h4>연산자(comparison operator)</h4>\n        <ul>\n          <li>동치 연산 ===: 같다면 true, !==: 다르면 true</li>\n          <li>비교 연산 &gt;, &lt;, &gt;=, &lt;=</li> {/* &gt;와 &lt;로 >, < 처리 */}\n          <li>논리합(OR) ||: 두 값 중 하나라도 true이면 true</li>\n          <li>논리곱(AND) &&: 두 값 중 하나라도 false이면 false</li>\n        </ul>\n\n        <p>\n          함수의 선언문과 표현식 구분하기 <br />\n          선언문: function greeting()  console.log(&quot;함수표현식&quot;); <br />\n          표현식: const greeting = function()  console.log(&quot;함수선언문&quot;); \n        </p>\n\n        <h4>매개변수와 전달 인자</h4>\n        <p>\n          function greeting(매개변수)  <br />\n          console.log(&#39;hello &#39; + 매개변수);  <br />\n          \n          함수를 호출할 때 소괄호 안에 값을 넣음으로써 매개변수에 값을 할당할 수 있는 것이 전달 인자입니다.\n        </p>\n    \n        <h4>return</h4>\n        <p>\n          내부 스코프에서 실행한 결과를 스코프 외부에서 사용하도록 반환한다는 의미입니다. <br />\n          return은 종료의 의미도 가지고 있어서 return 뒤에 실행되는 코드는 실행되지 않습니다.\n        </p>\n      </dd>\n    </dl>\n  );\n};\n\nexport default Day10;\n"],"names":["Day10","_jsxs","className","children","_jsx"],"sourceRoot":""}