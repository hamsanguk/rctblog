"use strict";(self.webpackChunkrctblg=self.webpackChunkrctblg||[]).push([[662],{662:(n,e,t)=>{t.r(e),t.d(e,{default:()=>r});t(5043);var c=t(1650),o=t(579);const r=()=>(0,o.jsxs)("dl",{className:"dayWrap",children:[(0,o.jsx)("dt",{className:"daybutton",children:"6/10"}),(0,o.jsxs)("dd",{className:"daycontent",children:[(0,o.jsx)("h3",{children:"OppenzeppelineAccessControl"}),(0,o.jsx)("p",{children:"\uad8c\ud55c\uc744 \ubd80\uc5ec\ubc1b\uc740 account\ub9cc function\uc744 \uc2e4\ud589\uc2dc\ud0ac \uc218 \uc788\ub3c4\ub85d contract\uc5d0 \uc81c\uc5b4 \ubc0f \uad00\ub9ac \uae30\ub2a5\uc744 \uc801\uc6a9\ud558\ub294 \ubc29\ubc95 \uad6c\ud604\ud558\ub294 \uae30\ubcf8 \uae30\ub2a5 1. \uc5ed\ud560\uba85 \uc815\ud558\uae30 (doctor, patient, admin,...) 2. account\uc5d0 \uc815\ud574\uc9c4 \uad8c\ud55c\uc774 \ubd80\uc5ec\ub410\ub294\uc9c0 \ud655\uc778 \uac00\ub2a5\ud574\uc57c 3. \uad8c\ud55c\uc744 \ubd80\uc5ec\ud558\ub294\uac74 Owner(contract creater)\uac00 \ucd5c\ucd08\ub85c \uac00\uc838\uc57c \ub41c\ub2e4 4. \uad8c\ud55c\ubd80\uc5ec(grantRole)\uc640 \uad8c\ud55c\ucde8\uc18c(revokeRole)\ub97c \uad6c\ud604\ud55c\ub2e4 5. \ud568\uc218\uc5d0 \uc801\uc6a9\ud560 modifier\uad6c\ud604\ud558\uae30"}),(0,o.jsx)(c.A,{code:'// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport "@openzeppelin/contracts/access/AccessControl.sol";\n\ncontract AccessControlExample is AccessControl {\n    // \uc5ed\ud560 \uc815\uc758 (\uac01 \uc5ed\ud560\uc740 \uace0\uc720\ud55c bytes32 \ud574\uc2dc\uac12)\n    bytes32 public constant ADMIN_ROLE = keccak256("ADMIN_ROLE");\n    bytes32 public constant DOCTOR_ROLE = keccak256("DOCTOR_ROLE");\n    bytes32 public constant PATIENT_ROLE = keccak256("PATIENT_ROLE");\n    bytes32 public constant RESEARCHER_ROLE = keccak256("RESEARCHER_ROLE");\n\n    // \uc608: \ud658\uc790\uac00 \uac00\uc9c4 \uc9c4\ub8cc \uae30\ub85d (\uac04\ub2e8\ud788 mapping\uc73c\ub85c \ud45c\ud604)\n    mapping(address => string[]) public patientRecords;\n\n    constructor() {\n        // \ubc30\ud3ec\uc790\ub294 ADMIN \uad8c\ud55c\uacfc DEFAULT_ADMIN \uad8c\ud55c\uc744 \ubaa8\ub450 \uac00\uc9d0\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _setupRole(ADMIN_ROLE, msg.sender);\n    }\n\n    // \uad00\ub9ac\uc790\ub9cc \uc5ed\ud560\uc744 \ubd80\uc5ec \uac00\ub2a5\n    function grantDoctor(address account) external onlyRole(ADMIN_ROLE) {\n        grantRole(DOCTOR_ROLE, account);\n    }\n\n    function grantPatient(address account) external onlyRole(ADMIN_ROLE) {\n        grantRole(PATIENT_ROLE, account);\n    }\n\n    function grantResearcher(address account) external onlyRole(ADMIN_ROLE) {\n        grantRole(RESEARCHER_ROLE, account);\n    }\n\n    // \uc758\uc0ac\ub9cc \ud658\uc790 \uae30\ub85d\uc744 \ub4f1\ub85d\ud560 \uc218 \uc788\uc74c\n    function addMedicalRecord(address patient, string memory record) external onlyRole(DOCTOR_ROLE) {\n        patientRecords[patient].push(record);\n    }\n\n    // \ud658\uc790\ub9cc \uc790\uc2e0\uc758 \uae30\ub85d\uc744 \uc5f4\ub78c (\uc5ec\uae30\uc120 \ub2e8\uc21c\ud788 \uae38\uc774 \ud655\uc778)\n    function getRecordCount() external view onlyRole(PATIENT_ROLE) returns (uint) {\n        return patientRecords[msg.sender].length;\n    }\n\n    // \uc5f0\uad6c\uc790\ub9cc \uae30\ub85d \uc5f4\ub78c \uc694\uccad \uac00\ub2a5\n    function requestAccessToRecord(address patient) external onlyRole(RESEARCHER_ROLE) returns (string memory) {\n        require(patientRecords[patient].length > 0, "No records");\n        return "Request sent to patient"; // \uc2e4\uc81c \ub85c\uc9c1\uc740 \uc694\uccad \ud14c\uc774\ube14 \uad00\ub9ac\n    }\n}\n'}),(0,o.jsx)("p",{})]})]})},1650:(n,e,t)=>{t.d(e,{A:()=>o});t(5043);var c=t(579);const o=n=>{let{code:e,language:t}=n;return(0,c.jsx)("pre",{style:{background:"#aaa",borderRadius:8,padding:16,overflowX:"auto",fontFamily:"Fira Mono, Consolas, monospace"},children:(0,c.jsx)("code",{children:e})})}}}]);
//# sourceMappingURL=662.a0f11d79.chunk.js.map