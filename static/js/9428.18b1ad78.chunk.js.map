{"version":3,"file":"static/js/9428.18b1ad78.chunk.js","mappings":"mJAEA,MAoCA,EApCcA,KAEVC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,UAASF,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAII,UAAU,YAAWF,UACrBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mCAERC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,aAAYF,SAAA,EACtBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mBACJC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,6LAC8CF,EAAAA,EAAAA,KAAA,UAC7CA,EAAAA,EAAAA,KAAA,KAAAE,SAAG,sFAAoB,6KAAuCF,EAAAA,EAAAA,KAAA,SAAK,sDACzDA,EAAAA,EAAAA,KAAA,UACXA,EAAAA,EAAAA,KAAA,SAAM,iIAENA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,KAAAE,SAAG,mEAAgB,OAClB,KAACF,EAAAA,EAAAA,KAAA,UACLA,EAAAA,EAAAA,KAAA,KAAAE,SAAG,iDAAa,qNAChBC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,YAAW,qKAAyCF,EAAAA,EAAAA,KAAA,UACvDA,EAAAA,EAAAA,KAAA,KAAAE,SAAG,YAAW,uIAAmDF,EAAAA,EAAAA,KAAA,aAErEG,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,8UAICF,EAAAA,EAAAA,KAAA,SAAM,4LAENA,EAAAA,EAAAA,KAAA,mB","sources":["til/Day20.tsx"],"sourcesContent":["import React,{JSX} from 'react';\n\nconst Day20 = (): JSX.Element => {\n    return (\n    <>\n        <dl className=\"dayWrap\">\n            <dt className=\"dayButton\">\n                <h3>day41 solidity 문법</h3>\n            </dt>\n            <dd className=\"daycontent\">\n                <h2>solidity Test</h2>\n                <p>\n                    solidity는 배포후에 수정할수 없어서 여러 테스트를 거친후에 배포되야 된다 <br/>\n                    <b>로컬테스트의 주요 목적과 기능</b>:기본적인 논리 검증, 이벤트 발생여부 확인, 오류 및 예외처리 검증 <br/>\n                    가스소비량 테스트 <br/>\n                   <br />\n                   로컬 테스트는 특성상 빠르고 비용이 들지않는다\n                   <br />\n                   <b>테스트배포후 확인 사항</b>:\n                </p> <br />\n                <b>로컬테스트 한계:</b>실제 가스비 측정 불가, 실제 네트워크 지연(latency) 반영 불가, 실제 네트워크와 다르다.\n                <p>\n                    <b>hardhat</b>: 내장 ethers 지원과 트랜잭션 및 스마트 컨트랙트 테스트에 최적화 <br />\n                    <b>truffle</b>: web3를 제공하며, ganache 와 truffle suite와 같이 작동하도록 설계 <br />\n                </p>\n                <p>\n                    defference of constant and immutable\n                    초기값 설정 후 변경 불가능\n                    constant는 컴파일 타임에 값이 결정되고, immutable은 컴파일 타임이 아닌 런타임에 값이 결정된다.\n                    <br />\n                    constant는 변수 선언시 값을 할당해야 하고, immutable은 생성자에서 할당해야 한다.\n                    <br />\n                </p>\n            </dd>\n        </dl>\n    </>\n    )\n}\nexport default Day20;"],"names":["Day20","_jsx","_Fragment","children","_jsxs","className"],"sourceRoot":""}