{"version":3,"file":"static/js/776.9a22bb88.chunk.js","mappings":"+IAEA,MAsBA,EAtBwBA,KAEhBC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,UAASF,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAII,UAAU,YAAWF,SAAC,WAC1BC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,aAAYF,SAAA,EACtBC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,4BACJF,EAAAA,EAAAA,KAAA,KAAGK,KAAK,qCAAoCH,SAAC,8BAAmB,KAACF,EAAAA,EAAAA,KAAA,SAAK,qNACFA,EAAAA,EAAAA,KAAA,SAAK,2NAC+BA,EAAAA,EAAAA,KAAA,SAAK,6FAGjHA,EAAAA,EAAAA,KAAA,KAAAE,SAAG,ijB","sources":["til/Day24.tsx"],"sourcesContent":["import React from 'react';\n\nconst Day24: React.FC = () => {\n    return (\n        <>\n            <dl className=\"dayWrap\">\n                <dt className=\"dayButton\">day24</dt>\n                <dd className=\"dayContent\">\n                    <p>\n                        <h5>4/8 erc20과제 </h5>\n                        <a href=\"https://github.com/hamsanguk/erc20\">openzeppelin 주소</a> <br/>\n                       contract폴더 안에 .sol 파일에서 erc20 토큰을 발행하는 코드를 openzeppelin 상속을 받아서 작성한다 <br/>\n                       .sol파일을 배포후에 생성된 abi를 기반으로 web3.ts에서 import abi,address as contractAddress from abis/mytoken.json 상속을 받아 <br/>\n                       openzeppelin의 매서드를 사용한다 web3에서. \n                    </p>\n                    <p>\n                        web3.ts는 abi와 상호작용 하는 라이브러리이며 openzeppelin의 erc20컨트랙트에서 상속받은 함수르을 web3.ts를 통해 호출이 가능하다.\n                        전체흐름은 mytoken.sol 파일을 배포하고 배포된 주소와 abi를 기반으로 web3.ts에서 호출이나 상호작용이 가능하다.\n                    </p>\n                </dd>\n            </dl>\n        </>\n    )\n}\nexport default Day24;\n"],"names":["Day24","_jsx","_Fragment","children","_jsxs","className","href"],"sourceRoot":""}