{"version":3,"file":"static/js/1201.0c65e1c9.chunk.js","mappings":"mJAEA,MAmFA,EAnFYA,KAEJC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,UAASF,SAAA,EACnBF,EAAAA,EAAAA,KAAA,MAAII,UAAU,YAAWF,UACrBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBAERC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,aAAYF,SAAA,EACtBF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aACJC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,gNAC4DF,EAAAA,EAAAA,KAAA,SAAK,6SACaA,EAAAA,EAAAA,KAAA,SAAK,mRAC1BA,EAAAA,EAAAA,KAAA,aAE5DG,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,0LACsCF,EAAAA,EAAAA,KAAA,UACrCA,EAAAA,EAAAA,KAAA,MAAAE,SAAI,eAAe,4OAA8DF,EAAAA,EAAAA,KAAA,SAAM,uRAChCA,EAAAA,EAAAA,KAAA,SAAK,kLAGhEG,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YAAY,+IAAsDF,EAAAA,EAAAA,KAAA,SAAM,mYAGhFG,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kCAAmB,4QAC+BF,EAAAA,EAAAA,KAAA,SAAK,8JACzBA,EAAAA,EAAAA,KAAA,SAAK,6PACeA,EAAAA,EAAAA,KAAA,SAAK,gTAE3DG,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,2CACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oLACJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,2QAA0DF,EAAAA,EAAAA,KAAA,SAAK,+RAK3EG,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,0CAAY,+yCASrBC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,6CAAoB,0OAGzBC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,YAAY,08BAKjBC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,+DAAuB,mPAG3BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBAAO,6SAIZC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBAAyB,ivE","sources":["til/Day32.tsx"],"sourcesContent":["import React,{JSX} from \"react\";\n\nconst Day32=()=>{\n    return(\n        <>\n            <dl className=\"dayWrap\">\n                <dt className=\"daybutton\">\n                    <h3>day 4/30</h3>\n                </dt>\n                <dd className=\"daycontent\">\n                    <h3>uniswap</h3>\n                    <p>\n                        Decentralized Exchange:중앙서버나 관리자 없이 암호화폐를 직접 거래할수 있게해주는 플랫폼<br/>\n                        Centralized Exchange:사용자의 암호화폐를 직접 거래하며,사용자가 블록체인 일어나는것이 아니라, 거래소의 내부 장부에서 처리<br/>\n                        거래가 실제 블록체인에서 일어나는 것이 아니라,거래소를 신뢰, 거래소가 대신 처리해주는 시스템을 사용<br/>\n                    </p>\n                    <p>\n                        오더북:사용자가 원하는 가격대에서 매수,매도 예약함을 기록한 리스트<br/>\n                        <h3>etherDelta</h3>:uniswap 이전에 초기 dex 프로젝트로 cex처럼 오더북 기반 시스템을 블록체인 위에서 구현하려 했다. <br />\n                        하지만 모든 행위가 블록체인 위에서 이뤄지기때문에,거래 처리속도가 느리며 가스비가 과도하게 들어간다<br/>\n                        사용자 수가 적어서 유동성,거래가 부족하여 유의미한 성과 없었다.\n                    </p>\n                    <p>\n                        <h3>uniswap</h3>:오더북x,매도 주문 없이도 거래가 가능/ AMM(Automated Market Maker)도입 <br /> \n                         amm:누구나 유동성 제공이 되며, 유동성을 기반으로 알고리즘이 가격을 결정하여 거래를 자동으로 채결[유동성이 항상 존재,빠른 거래, 좋은 사용자 결험]\n                    </p>\n                    <p>\n                        <h3>유동성(liquidity)</h3>\n                        경제적 관점에서 유동성은 손실없이 현금화할 수 있는능력으로 손쉽게 바꿀수 있는지 그 가능성과 속도<br/>\n                        예시로 현대에서는 유동성이 높다고 평가받는 자산을 '현금'. <br/>\n                        거래소에서는 내 토큰을 다른토큰으로 교환을 원할 때 가능해야 된다. 전재조건은 \"바꿔줄 상대방\",<br/>\n                        즉 거래 상대와 자본이 항상 준비된 상태 (이 조건이 충족되지 않으면 사용자들은 유동성이 풍부한 다른 거래소로 이동)\n                        <ul>\n                            <li>거래소별 차이</li>\n                            <li>cex:거래소 자체가 보유한 현금을 기반으로 토큰을 사고파는 것이 가능</li>\n                            <li>dex:현금과 같은 중앙화된 자산을 취급하지 않으며, 오직 토큰과 코인같은 탈중앙화 자산끼리만 거래가능 <br/>\n                                누군가 미리 제공한 자산이 없다면,사용자는 거래진행 불가/ 제공하는 사람을 (liquidity provider,LP):보상으로 lp 토큰 지급 \n                            </li>\n                        </ul>   \n                    </p>      \n                    <p>\n                        <h3>비영구적 손실</h3>\n                        유동성 공급자가 인지해야 될것으로, 풀에 공급을 줬는데 않줬을때보다 가격변동으로 인해 이득이 없거나,\n                        손해가 생긴상황/\n                        유동성 풀에 예치한 자산의 가격이 변동하며, 예치하지 않고 보유만 했을때보다 손해를 보는 상황\n                        변동이 심할수록 손실이 커지며, 자산을 출금할때 현실화되므로 비영구적이라는 이름/\n                        발생하는 이유는 pair로 관리하는 풀의 특성상 amm은 두 자산의 가격을 자동으로 균형을 조정하며,\n                        한 쪽의 자산만 오르거나 내려가도,풀에서는 자동으로 조정이 발생하여 출금시에 예치 당시보다 손실이\n                        있을수 있다.\n                   </p>\n                   <p>\n                    <h3>LPToken(거래 수수료)</h3>\n                    손해가 가능성이 있어도 공급을 하는 이유는 거래수수료가 상쇄를 하거나 초과할 수 있다\n                   </p>\n                   <p>\n                    <h3>Slipage</h3>:거래를 의도한 가격대와 실제 체결된 가격의 차이, 주로 오더북 기반 거래시스템에서 거래직전\n                    타인의 대략 매도나 매수로 인한 가격차이,\n                    AMM 기반 DEX에서도 발생한다. AMM에서는 오더북 대신 가격결정 알고리즘을 사용하며, 거래는 유동성 풀에서 이뤄진다\n                    이때도 소요가 급격히 늘어나면 가격이 바뀌고, 슬리피지 발생/ 유동성풀 특징상 풀의 규모가 크면 슬리피지가 발생해도 미미하다\n                   </p>\n                   <p>\n                    <h3>uinswap 거래구조(동작방식)</h3>\n                    p2c (peer to contract)방식으로 매수자가 컨트랙트와 직접거래\n                    유동성 풀(liquidity pool)을 이용해 항상 거래가 가능\n                    <h4>구성</h4>\n                    토큰페어로 구성된 유동성플/ 각 페어마다 Token Exchange Contract가 생성된/\n                    이 각 페어의 컨트랙트들은 Factory Contract를 통해 만들어진다\n                   </p>\n                   <p>\n                     <h3>uniswap v1 -&gt; v2 </h3>\n                     v2의 주요 개선점: (erc20 - erc20 pair 지원) v1에서는 eth를 중개로 erc20거래를 필요로 했다\n                     v2에서는 erc20간 직적거래가 가능하다. 이로인해 - 낮은 수수료, 더 적은 슬리피지, 간결해진 구조를 실현\n                     (TimeWeightedAvaragePrice TWAP기반의 가격 오라클):v2에서는 외부 컨트랙트가 가격 정보를 읽을수 있게 가격 오라클 기능을 추가\n                     실시간 가격은 조작될수 있어, v2에서는 시간 가중 평균가격(TWAP) 방식을 사용\n                    (Flash Swap):한 트랜잭션 내에서 유동성 풀의 토큰을 즉시 대출받을수 있는 기능으로 무담보대출 기반의 이비트리지,리밸런싱,레버리지 전략 가능\n                    복잡한 금융전략을 한 트랜잭선 에서 구현가능\n                    사용자는 선불없이 토큰을 가져올 수 있다/트랜잭션이 끝날때까지 다음 중 하나를 수행해야 A.가져간 토큰만큰 다시 반환B.가져간 토큰에 상응하는 다른 자산을 풀에 예치C.a,b를 일부 수행\n                    (seperated core/Periphery architecture): core contract:유동성풀과 직접 관련 로직을 담당, periphery contract:UI,routing,기타 부가 기능을 처리속도가\n                    이렇게 분리되면 안정성,보안성 강화/ 업그레이드와 유지보수 용이성 향상\n                   </p>\n                </dd>\n            </dl>\n        </>\n    )\n}\nexport default Day32;"],"names":["Day32","_jsx","_Fragment","children","_jsxs","className"],"sourceRoot":""}