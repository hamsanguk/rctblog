{"version":3,"file":"static/js/535.3e1c035e.chunk.js","mappings":"kJAEA,MAoDA,EApDcA,KAENC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,UAASC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,UAC1BF,EAAAA,EAAAA,MAAA,MAAIC,UAAU,aAAYC,SAAA,EACtBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yCAGJF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eAERC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,iHAGHC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iFACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uYAIHF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kEACJC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+EAERC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wGACJC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,+KAECC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oDAAoD,yIAG5DF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eAAe,0BAEvBF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cAAc,gGAEtBF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eAAe,yGACfC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4H","sources":["til/Day38.tsx"],"sourcesContent":["import React from 'react';\n\nconst Day38 = ()=>{\n    return(\n        <dl className=\"dayWrap\">\n            <dt className=\"daybutton\">5/26</dt>\n            <dd className=\"daycontent\">\n                <h3>\n                    SQL 주요 명령어\n                </h3>\n                <ul>\n                    <li>SELECT</li>\n                    <li>INSERT</li>\n                    <li>UPDATE</li>\n                    <li>DELETE</li>\n                </ul>\n                <p>\n                    UPDATE,DELETE는 WHERE을 않쓰면 전체가 적용되버린다.\n                </p>\n                <hr />\n                <h3>필요한 데이터만 조건 필터링</h3>\n                <p>\n                    where \"조건문 작성\" if문 처럼 and나 or을 추가하여 여러조건을 만족하는 값을 조회한다.\n                    LIKE \"%문자열\" 패턴으로 문자열 검색하기 '%a':a로 끝나는,'%a%':a를 포함,'a%':시작이 a\n                </p>\n                <ul>\n                    <li>column: 여러명의 한 속성(열)</li>\n                    <li>row: 온전한 1인분의 데이터(행)</li>\n                </ul>\n                <h4>명령어 FROM columnName WHERE 조건문: 일반적인 모양</h4>\n                <hr />\n                <h3>JOIN</h3>\n                <p>\n                    2개 이상의 테이블을 연결하여 하나의 결과처럼 원하는 데이터 출력\n                    <h5>select * from A Join B ON A.sameCol = B.sameCol</h5>\n                    조회한다 모두 A table 과 B table에서 합친 각각의 같은 column을 \n                </p>\n                <ul>\n                    <li>\n                        <h4>Inner Join</h4>:교집합\n                    </li>\n                    <li>\n                        <h4>Left Join</h4>:왼쪽전체+교집합(기준테이블 왼쪽)\n                    </li>\n                    <li>\n                        <h4>Right Join</h4>:오른쪽전체+교집합(기준테이블 오른쪽)\n                            <h5>기준테이블:둘 중 더 많이 포함하는 테이블</h5>\n                    </li>\n                </ul>\n\n            </dd>\n        </dl>\n    )\n}\nexport default Day38;"],"names":["Day38","_jsxs","className","children","_jsx"],"sourceRoot":""}