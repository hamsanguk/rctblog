{"version":3,"file":"static/js/888.5fbc4006.chunk.js","mappings":"+IAEA,MAoEA,EApEcA,KAENC,EAAAA,EAAAA,KAAA,OAAAC,UACGC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,UAASF,SAAA,EACtBD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,YAAWF,SAAC,WAG1BC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,aAAYF,SAAA,EAClBD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,iCAGJC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,uJACgDD,EAAAA,EAAAA,KAAA,SAAK,sPACeA,EAAAA,EAAAA,KAAA,UACnEA,EAAAA,EAAAA,KAAA,SAAK,qLAC8DA,EAAAA,EAAAA,KAAA,SAAK,kHAC1CA,EAAAA,EAAAA,KAAA,UAC7BE,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,mBACoBD,EAAAA,EAAAA,KAAA,SAAK,+CACkBA,EAAAA,EAAAA,KAAA,SAAK,KAEhDA,EAAAA,EAAAA,KAAA,SAAK,8BAGLA,EAAAA,EAAAA,KAAA,MAAAC,SAAI,qCACJD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,sNAGHD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,qCACJD,EAAAA,EAAAA,KAAA,KAAAC,SAAG,0OAGHD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,sEACJC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,yHAEiCD,EAAAA,EAAAA,KAAA,SAAK,4BACRA,EAAAA,EAAAA,KAAA,SAAK,mBACVA,EAAAA,EAAAA,KAAA,SAAK,gBACTA,EAAAA,EAAAA,KAAA,SAAK,aACRA,EAAAA,EAAAA,KAAA,SAAK,mBACCA,EAAAA,EAAAA,KAAA,SAAK,KACdA,EAAAA,EAAAA,KAAA,UACNA,EAAAA,EAAAA,KAAA,SAAK,8CACqCA,EAAAA,EAAAA,KAAA,UAC9CA,EAAAA,EAAAA,KAAA,SAAK,yNAIKA,EAAAA,EAAAA,KAAA,UAEVA,EAAAA,EAAAA,KAAA,SAAK,4LAEsFA,EAAAA,EAAAA,KAAA,SAAK,oCAC5DA,EAAAA,EAAAA,KAAA,SAAK,qCACJA,EAAAA,EAAAA,KAAA,SAAK,KAChCA,EAAAA,EAAAA,KAAA,SAAK,KACTA,EAAAA,EAAAA,KAAA,gBAGlBA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,mB","sources":["til/Day19.tsx"],"sourcesContent":["import React,{JSX} from 'react';\n\nconst Day19 = (): JSX.Element => {\n    return(\n        <div>\n           <dl className=\"dayWrap\">\n            <dt className=\"dayButton\">\n               day19\n            </dt>\n            <dd className=\"dayContent\">\n                    <h2>\n                        day41 solidity 문법\n                    </h2>\n                    <p>\n                        solidity에서 상태변수에 public을 사용하면 getter함수가 생성되지만, <br/>\n                        상태변수에 private또는 internal로 가시성 명시하면 외부에서 접근할수 없어서 getter를 직접 구현해야 된다<br/>\n                        <br/>\n                        구조체 struct는 기본적으로 접근제한자(public,private,internal,external)를 사용하지 않으며<br/>\n                        다른 상태변수를 통해 private로 선언할 수 있다.<br/>\n                         <p>\n                            struct Person&#123; <br/>\n                            string name; uint age; adress userAddress; <br/>\n                            &#125; \n                            <br/>\n                            Person private makePerson;\n\n                            <h3>구조체의 getter</h3>\n                            <p>\n                               상태변수를 private로 선언하면 getter가 자동생성이 않되며,별도의 getter함수를 public으로 구현\n                            </p>\n                            <h3>구조체의 setter</h3>\n                            <p>\n                                구조체 데이터를 설정하는 setter함수는 특정 필드 변경이나,전체 구조체를 한 번에 설정 가능\n                            </p>\n                            <h3>mapping활용 여러 구조체 관리</h3>\n                            <p>\n\n                                mapping을 활용하면 여러 구조체를 관리할 수 있다. <br/>\n                                contract StructMapping &#123;<br/>\n                                    struct Person &#123;<br/>\n                                        string name;<br/>\n                                        uint age;<br/>\n                                        address wallet;<br/>\n                                        &#125;<br/>\n                                        <br/>\n                                    mapping(address =&#62; Person) private people;<br/>\n                                    <br/>\n                                    // 특정 사용자의 정보를 설정하는 함수\n                                    function setPerson(string memory _name, uint _age) public &#123;\n                                        people[msg.sender] = Person(_name, _age, msg.sender);\n                                        &#125;<br/>\n\n                                    <br/>\n                                    // 특정 사용자의 정보를 반환하는 함수\n                                    function getPerson(address _user) public view returns (string memory, uint, address) &#123;<br/>\n                                        Person memory p = people[_user];<br/>\n                                        return (p.name, p.age, p.wallet);<br/>\n                                        &#125;<br/>\n                                    &#125;<br/>\n                            </p>\n                         </p>\n                        <br/>\n                        <br/>\n                    </p>\n            </dd>\n           </dl>\n        </div>\n    )\n}\n\nexport default Day19;"],"names":["Day19","_jsx","children","_jsxs","className"],"sourceRoot":""}